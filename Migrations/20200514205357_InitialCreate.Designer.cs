// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NPWeatherService.Data;

namespace NPWeatherService.Migrations
{
    [DbContext(typeof(NPDbContext))]
    [Migration("20200514205357_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NPWeatherService.Models.Park", b =>
                {
                    b.Property<string>("ParkCode")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int>("Acreage")
                        .HasColumnType("int");

                    b.Property<int>("AnnualVisitorCount")
                        .HasColumnType("int");

                    b.Property<string>("Climate")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("ElevationInFeet")
                        .HasColumnType("int");

                    b.Property<decimal>("EntryFee")
                        .HasColumnType("Money");

                    b.Property<string>("InspirationalQuote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspirationalQuoteSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<decimal>("MilesOfTrail")
                        .HasColumnType("decimal(5, 1)");

                    b.Property<int>("NumberOfAnimalSpecies")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCampsites")
                        .HasColumnType("int");

                    b.Property<string>("ParkDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkName")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("YearFounded")
                        .HasColumnType("int");

                    b.HasKey("ParkCode");

                    b.ToTable("Park");
                });

            modelBuilder.Entity("NPWeatherService.Models.Survey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityLevel")
                        .HasColumnType("int")
                        .HasMaxLength(20);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ParkCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.HasIndex("ParkCode");

                    b.ToTable("Survey");
                });

            modelBuilder.Entity("NPWeatherService.Models.Survey", b =>
                {
                    b.HasOne("NPWeatherService.Models.Park", "Park")
                        .WithMany("Surveys")
                        .HasForeignKey("ParkCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
